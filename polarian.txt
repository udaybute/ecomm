package com.hcl.nexalm.polarion.restapi;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.io.IOUtils;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

public class AddAttachment {

    public static void main(String[] args) {
        List<File> oneFile = new ArrayList<>();
        File f = new File("C:/Image/A.txt");
        oneFile.add(f);
        addWorkItemAttachments(oneFile, "BGPT-585");
    }

    public static List<Attachment> addWorkItemAttachments(List<File> attachments, String workItemId) {
        List<Attachment> attachmentsList = new ArrayList<>();

        try {
            String inputJson = "{\n" +
                    "  \"data\": [\n";
            String workItemAttachments = "";
            int attachmentsCount = attachments.size();

            MultipartEntityBuilder builder = MultipartEntityBuilder.create();

            for (File file : attachments) {
                attachmentsCount--;

                workItemAttachments += "    {\n" +
                        "      \"type\": \"workitem_attachments\",\n" +
                        "      \"attributes\": {\n" +
                        "        \"fileName\": \"" + file.getName() + "\",\n" +
                        "        \"title\": \"" + file.getName() + "\"\n" +
                        "      }\n" +
                        "    }";

                if (attachmentsCount == 0) {
                    workItemAttachments += "\n";
                } else {
                    workItemAttachments += ",\n";
                }

                builder.addBinaryBody(file.getName(), file, ContentType.APPLICATION_OCTET_STREAM, file.getName());
                System.out.println(file.getName());
            }

            inputJson += workItemAttachments + "  ]\n" +
                    "}";

            builder.addTextBody("data", inputJson, ContentType.APPLICATION_JSON);
            HttpEntity multipart = builder.build();
            CloseableHttpClient client = HttpClients.createDefault();

            String uri = "http://hclt-pc4391-1:8088/polarion/rest/v1/projects/BalajiGarud_ProjectTask/workitems/BGPT-586/attachments";

            HttpPost httpPost = new HttpPost(uri);
            httpPost.setEntity(multipart);
            httpPost.setHeader("Content-type", "multipart/form-data");
            httpPost.setHeader("Accept", "application/json");
            httpPost.setHeader("Authorization", "Bearer eyJraWQiOiI2NjdjYjYzNy0wYTc2M2ExZC0yNTkxNjEyNS1jMGM4NGFjMyIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJhZG1pbiIsImlkIjoiNmRjODM0MTQtMGE3NjNhMWQtM2QxMWZjOWYtNjE4ZWQ3NDMiLCJleHAiOjE3Nzc0ODc0MDAsImlhdCI6MTY3Njg3OTA4Mn0.ife703Lb0jdWJjNhPtIOZnO2UtDk10LgxCUnw0YU9NP3eM7CU99ROCERZjFUqfneclKmyxNRDPUdBkqKFjjj4eR4dBYbEH9Xn_XEF_dOPUxqxfOvfMpI3jqkkL0e2kFpdRZRG6Sai_i_gVwLsEeSvC_rbPA9kgkX1Ppw0HipI8J__eCqqqP6AcgQFYUuNKtw7ErjwOSLm3RQYDYsxVpRQJoLJ5oIfFhZVmBUt52hvoAQPb_h3dMzjfBPoR2gnzSc-NaOANLmRANKKlTV3TqV577SjIXImFj4r3G6tf_xARPEorwkQVoROO59FegMtpjW6jJ9sXSbBd3xd5ca_u6iJg");
            CloseableHttpResponse response = client.execute(httpPost);

            if (response.getStatusLine().getStatusCode() == 201) {
                String content = IOUtils.toString(response.getEntity().getContent());
```java
                JsonObject obj = new JsonParser().parse(content).getAsJsonObject();
                JsonArray jsonArray = obj.getAsJsonArray("data");

                for (int i = 0; i < jsonArray.size(); i++) {
                    JsonObject attachmentObject = jsonArray.get(i).getAsJsonObject();
                    String attachmentId = attachmentObject.get("id").getAsString();
                    Attachment attachment = new Attachment(attachmentId);
                    attachmentsList.add(attachment);
                }
            } else {
                System.out.println("Failed to add attachments. Response code: " + response.getStatusLine().getStatusCode());
            }

            response.close();
            client.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return attachmentsList;
    }
}
